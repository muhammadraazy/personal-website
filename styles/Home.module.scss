@use 'sass:math';
@use 'sass:map';

$color: adjust-color(pink, $blue: 100);
$pad: calc(10px + 20px);
$bRadius: math.div(20px, 2);
$width: 400px;
$primary: #326dee;
$secondary: #42Beca;
$info: #36c31c;
$warn: #d32752;

// nested maps
$fonts: (
  "Helvetica": (
    "weights": (
      "lightest": 100,
      "light": 300
    )
  )
);

$heavy-weights: ("medium": 500, "bold": 700);

// merging a nested maps
@debug map.merge($fonts, "Helvetica", "weights", $heavy-weights);
@debug map.remove($fonts, "Helvetica", "weights", "lightest");
// set the values
@debug map.set($heavy-weights, 'medium', 600);
// set value to nested map
@debug map.set($fonts, "Helvetica", "weights", "lightest", 300);

// using maps
$colors1: (
    "primary": $primary,
    "secondary": $secondary
);

$colors2: (
    "info": $info,
    "warn": $warn
) ;

@debug map-get($map: $colors1 , $key: "primary");
@debug map-has-key($map: $colors1, $key: 'secondary');
@debug map-keys($colors1);
// combine all the maps
@debug map-merge($colors1, $colors2);
@debug map-values($colors1);

@mixin defaultStyle {
    background-color: #333;
    color: complement($color);
    padding: $pad;
    width: $width;
    border-radius: $bRadius;
}

.learn_sass {
    @include defaultStyle;
}

// sass math
@debug math.max(10px, 20px, 12px, 13px);
@debug math.div(20px, 2);
@debug math.floor(3.5);
@debug math.round(5.6);
@debug math.min(15px, 20px);
@debug math.pow(15, 2);
@debug math.sqrt(20);
@debug math.pow(10, 3);
@debug math.compatible(20px, 20px);
@debug math.compatible(20px, 20em);
@debug math.is-unitless(20px);
@debug math.is-unitless(20);
@debug math.unit(100rem);
@debug math.percentage(2);
@debug math.random($limit: 40);